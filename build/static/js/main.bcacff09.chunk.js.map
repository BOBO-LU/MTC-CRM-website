{"version":3,"sources":["components/Dnd-Row/cross.svg","components/Dnd-Row/grid.jsx","components/Snackbar/snackbar.jsx","components/DatePicker/datePicker.jsx","components/Dnd-Row/utils.jsx","components/Dnd-Row/row.jsx","components/Dnd-Row/data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Grid","props","filterExpr","status","onAdd","bind","onReorder","dataSource","store","datasource","reshapeOnPush","e","data","courseId","s4","Math","floor","random","toString","substring","_uuid","courseType","duration","durationType","capacity","Status","Customize","notes","this","calculateEndTime","key","itemData","values","toData","update","then","push","type","checkStatus","console","log","_array","visibleRows","component","getVisibleRows","toIndex","indexOf","fromIndex","splice","refresh","notify","customize","row","remove","done","refreshDataGrid","cellData","rowIndex","dataGrid","instance","catch","error","ref","height","showBorders","filterValue","noDataText","onInitNewRow","onRowInserted","allowAdding","mode","title","showTitle","width","colCount","dataField","caption","location","alignment","showColon","text","allowReordering","group","dataType","hidingPriority","visible","cellRender","getRowIndex","displayCaption","id","icon","removeLogo","cssClass","onClick","onDeleteClick","React","Component","useStyles","makeStyles","theme","root","margin","spacing","float","Snackbar","variant","classes","enqueueSnackbar","useSnackbar","Button","className","size","color","fetch","res","json","startTime","engagementId","requester","IntegrationNotistack","maxSnack","container","display","flexWrap","textField","PickerDate","useState","selectedDate","setSelectedDate","utils","DateFnsUtils","required","clearable","showTodayButton","format","label","value","onChange","date","KeyboardButtonProps","PickerTime","selectedTime","setSelectedTime","ampm","onSelectedTime","addMinutes","dt","reduce","accumulator","curruentValue","parseInt","getTime","newTime","minutes","getMinutes","concat","String","getHours","convertMinute","Date","DataSource","ArrayStore","courseName","speaker","App","handleEngagementId","setState","target","renderkey","state","handleRequester","handleLocation","handleTimeChange","endTime","add_minutes","src","TextField","onText","defaultValue","InputProps","readOnly","style","padding","withStyles","fontSize","withTheme","progress","setProgress","basename","onLoaderFinished","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,mC,wYC4R5BC,E,kDA3OX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,WAAa,CAAC,SAAU,IAAK,EAAKD,MAAME,QAC7C,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAEjB,EAAKE,WAAa,CACdC,MAAO,EAAKP,MAAMQ,WAClBC,eAAe,GATJ,E,yDAaNC,GAKTA,EAAEC,KAAKC,SAzCf,WACI,SAASC,IACL,OAAOC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACvBC,SAAS,IACTC,UAAU,GAEnB,OACIL,IACAA,IACA,IACAA,IACA,IACAA,IACA,IACAA,IACA,IACAA,IACAA,IACAA,IAuBkBM,GAClBT,EAAEC,KAAKS,WAAa,eACpBV,EAAEC,KAAKU,SAAW,KAClBX,EAAEC,KAAKW,aAAe,MACtBZ,EAAEC,KAAKY,SAAW,KAClBb,EAAEC,KAAKa,OAAS,IAChBd,EAAEC,KAAKc,WAAY,EACnBf,EAAEC,KAAKe,MAAQ,mGACfC,KAAK3B,MAAM4B,iBAAiB,K,4BAG1BlB,GAAI,IAAD,OACDmB,EAAMnB,EAAEoB,SAASlB,SACjBmB,EAAS,CAAEP,OAAQd,EAAEsB,QAEzBL,KAAK3B,MAAMQ,WAAWyB,OAAOJ,EAAKE,GAAQG,MAAK,WAC3C,EAAKlC,MAAMQ,WAAW2B,KAAK,CACvB,CACIC,KAAM,SACNP,IAAKA,EACLlB,KAAMoB,QAKdJ,KAAKU,YAAY3B,EAAEsB,UACnBM,QAAQC,IAAI,oBACZZ,KAAK3B,MAAM4B,iBAAiB,M,gCAI1BlB,GACN,IAAIH,EAAQoB,KAAK3B,MAAMQ,WAAWgC,OAC9BC,EAAc/B,EAAEgC,UAAUC,iBAC1BC,EAAUrC,EAAMsC,QAAQJ,EAAY/B,EAAEkC,SAASjC,MAC/CmC,EAAYvC,EAAMsC,QAAQnC,EAAEoB,UAEhCvB,EAAMwC,OAAOD,EAAW,GACxBvC,EAAMwC,OAAOH,EAAS,EAAGlC,EAAEoB,UAE3BpB,EAAEgC,UAAUM,Y,oCAGFtC,GAAI,IAAD,OACbuC,IAAO,8CACP,IAAIC,EAAYxC,EAAEyC,IAAIxC,KAAKc,UACvBI,EAAMnB,EAAEyC,IAAIxC,KAAKC,SAErB,IAAkB,IAAdsC,EACAvB,KAAK3B,MAAMQ,WAAW4C,OAAOvB,GAAKwB,MAAK,WACnC,EAAKC,yBAEN,CACH,IAAIvB,EAAS,CAAEP,OAAQ,GAEvBG,KAAK3B,MAAMQ,WAAWyB,OAAOJ,EAAKE,GAAQG,MAAK,WAC3C,EAAKlC,MAAMQ,WAAW2B,KAAK,CACvB,CACIC,KAAM,SACNP,IAAKA,EACLlB,KAAMoB,QAKtBJ,KAAK3B,MAAM4B,iBAAiB,K,kCAGpB2B,GAIR,OAFUA,EAASC,SAEN,I,kCAGLtD,GAIR,OAAe,IAAXA,I,wCAQJyB,KAAK8B,SAASC,SACTV,UACAd,MAAK,eAGLyB,OAAM,SAAUC,S,+BAKf,IAAD,OACL,OACI,kBAAC,IAAD,CACIC,IAAK,SAACA,GAAD,OAAU,EAAKJ,SAAWI,GAC/BvD,WAAYqB,KAAKrB,WACjBwD,OAA8B,IAAtBnC,KAAK3B,MAAME,OAAe,IAAM,IACxC6D,aAAa,EACbC,YAAarC,KAAK1B,WAClBgE,WAAW,GACXC,aAAc,SAACxD,GAAD,OAAO,EAAKwD,aAAaxD,IACvCyD,cAAe,kBAAM,EAAKnE,MAAM4B,qBAEhC,kBAAC,UAAD,CAEIwC,YAAazC,KAAKU,YAAYV,KAAK3B,MAAME,QAEzCmE,KAAK,SAEL,kBAAC,QAAD,CACIC,MAAM,uCACNC,WAAW,EACXC,MAAO,IACPV,OAAQ,MAIZ,kBAAC,OAAD,CAAMW,SAAU,GACZ,kBAAC,OAAD,CAAMC,UAAU,aAAaC,QAAQ,iBACrC,kBAAC,OAAD,CAAMD,UAAU,WAAWC,QAAQ,wBACnC,kBAAC,OAAD,CACID,UAAU,UACVC,QAAQ,oEAGZ,yCACA,kBAAC,OAAD,KAII,kBAAC,QAAD,CACIC,SAAS,MACTC,UAAU,SACVC,WAAW,EACXC,KAAK,wGAMrB,kBAAC,cAAD,CACIC,iBAAiB,EACjBrE,KAAMgB,KAAK3B,MAAME,OACjB+E,MAAM,aACN5E,UAAWsB,KAAKtB,UAChBF,MAAOwB,KAAKxB,QAEhB,kBAAC,YAAD,CAAWkE,KAAK,YAChB,kBAAC,UAAD,CAASA,KAAK,SAEd,kBAAC,SAAD,CACIK,UAAU,WACVQ,SAAS,SACTP,QAAQ,eACRE,UAAU,SACVL,MAAO,GACPW,eAAgB,EAChBC,QAASzD,KAAKU,aAAaV,KAAK3B,MAAME,UAE1C,kBAAC,SAAD,CACIgF,SAAS,SACTP,QAAQ,eACRE,UAAU,SACVL,MAAO,GACPY,QAASzD,KAAKU,YAAYV,KAAK3B,MAAME,QAErCmF,WAAY1D,KAAK2D,cAErB,kBAAC,SAAD,CACIZ,UAAU,aACVQ,SAAS,SACTP,QAAShD,KAAK3B,MAAMuF,iBAExB,kBAAC,SAAD,CACIb,UAAU,UACVQ,SAAS,SACTP,QAAS,eACTE,UAAU,SACVL,MAAO,IACPW,eAAgB,IAEpB,kBAAC,SAAD,CACIT,UAAU,WACVQ,SAAS,SACTV,MAAO,GACPY,SAAS,EACTT,QAAQ,uBACRE,UAAU,SACVM,eAAgB,IAEpB,kBAAC,SAAD,CAAQT,UAAU,SAASQ,SAAS,SAASE,SAAS,IACtD,kBAAC,SAAD,CACIhD,KAAK,UACLuC,QAAQ,eACRE,UAAU,SACVL,MAAO,GACPY,QAASzD,KAAKU,YAAYV,KAAK3B,MAAME,SAErC,kBAAC,SAAD,CACIsF,GAAG,eACHhB,MAAO,IACPiB,KAAMC,IACNC,SAAS,uBACTC,QAAS,SAAClF,GAAD,OAAO,EAAKmF,cAAcnF,Y,GApOxCoF,IAAMC,W,qDC3CnBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,KAEtBC,MAAO,QACP,QAAS,QAIjB,SAASC,EAASvG,GACd,IAU4BwG,EAVtBC,EAAUT,IACRU,EAAoBC,cAApBD,gBAoDR,OACI,kBAACE,EAAA,EAAD,CACIC,UAAWJ,EAAQN,KACnBW,KAAK,QACLN,QAAQ,YACRO,MAAM,UACNnB,SAjDoBY,EAiDQ,UAjDI,WAPpCQ,MAAM,0BACD9E,MAAK,SAAC+E,GAAD,OAASA,EAAIC,UAClBhF,MAAK,SAACvB,GACH2B,QAAQC,IAAI5B,MAEfgD,MAAMrB,QAAQC,KASQ,MAAnBvC,EAAMmH,WACiB,KAAvBnH,EAAMoH,cACc,KAApBpH,EAAMqH,WACa,KAAnBrH,EAAM4E,UAUVtC,QAAQC,IAAI,mBACZD,QAAQC,IACJvC,EAAMmH,UACNnH,EAAMoH,aACNpH,EAAMqH,UACNrH,EAAM4E,UAEV8B,EAAgB,6CAAW,CAAEF,QAAS,YAEtClE,QAAQC,IAAI,qBACZD,QAAQC,IACJvC,EAAMmH,UACNnH,EAAMoH,aACNpH,EAAMqH,UACNrH,EAAM4E,UAEV8B,EACI,2JACA,CAAEF,gBAaLxG,EAAM+E,MAKJ,SAASuC,EAAqBtH,GACzC,OACI,kBAAC,IAAD,CAAkBuH,SAAU,GACxB,kBAAChB,EAAD,CACIxB,KAAM/E,EAAM+E,KACZoC,UAAWnH,EAAMmH,UACjBC,aAAcpH,EAAMoH,aACpBC,UAAWrH,EAAMqH,UACjBzC,SAAU5E,EAAM4E,Y,uCC/E1BoB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsB,UAAW,CACPC,QAAS,OACTC,SAAU,QAEdC,UAAW,CACPvB,OAAQ,KACR5B,MAAO,MACP,YAAa,WAIrB,SAASoD,EAAW5H,GAChB,IAAMyG,EAAUT,IADO,EAEiB6B,mBAAS,MAF1B,mBAEhBC,EAFgB,KAEFC,EAFE,KAQvB,OACI,kBAAC,IAAD,CAAyBC,MAAOC,KAC5B,kBAAC,IAAD,CACIC,UAAQ,EAERC,WAAS,EACTC,iBAAe,EACfvB,UAAWJ,EAAQkB,UAEnBU,OAAO,aACPjC,OAAO,SACPZ,GAAG,qBACH8C,MAAOtI,EAAMsI,MACbC,MAAOT,EACPU,SAlBa,SAACC,GACtBV,EAAgBU,IAkBRC,oBAAqB,CACjB,aAAc,kBAOlC,SAASC,EAAW3I,GAChB,IAAMyG,EAAUT,IADO,EAEiB6B,mBAAS7H,EAAMmH,WAFhC,mBAEhByB,EAFgB,KAEFC,EAFE,KAUvB,OACI,kBAAC,IAAD,CAAyBb,MAAOC,KAC5B,kBAAC,IAAD,CAEIC,UAAQ,EAERE,iBAAe,EACfU,MAAM,EACNjC,UAAWJ,EAAQkB,UACnBnC,GAAG,cACH8C,MAAOtI,EAAMsI,MACbC,MAAOK,EAEPJ,SAnBa,SAACC,GACtBI,EAAgBJ,GAChBnG,QAAQC,IAAI,eAAgBkG,GAC5BzI,EAAM+I,eAAwB,OAATN,EAAgB,EAAIA,IAiBjCC,oBAAqB,CACjB,aAAc,kBC3D3B,SAASM,EAAWC,EAAI1I,GAO3B,GADA+B,QAAQC,IAAI,kBAAmB0G,SAAWA,GAC/B,IAAPA,EAEA,OADA3G,QAAQC,IAAI,cACL0G,EAGX,IAAI5H,EAAWd,EAAM2I,QAAO,SAAUC,EAAaC,GAC/C,OAA6B,IAAzBA,EAAc5H,OACP2H,EAAcE,SAASD,EAAc/H,UAErC8H,IAEZ,GAOH,OALA7G,QAAQC,IAAI,aAAc0G,EAAGK,WArC1B,SAAuBC,GAI1B,IAAIC,EAAU,GAUd,OAPIA,EADAD,EAAQE,aAAe,GACb,IAAIC,OAAOC,OAAOJ,EAAQE,eAE1BE,OAAOJ,EAAQE,cAGbE,OAAOJ,EAAQK,YAAYF,OAAO,IAAKF,GA4BzCK,CADA,IAAIC,KAAKb,EAAGK,UAAuB,IAAXjI,ICvB1C,IAQMb,EAAa,IAAIuJ,IAAW,CAC9BxJ,MAAO,IAAIyJ,IAAW,CAClBnI,IAAK,WACLL,OAAQ,SACRb,KC9BkB,CACtB,CACIC,SAAU,EACVqJ,WAAY,kBACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,WACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,yGACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,WACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,qHACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,WACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,mFACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,WACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,yGACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,cACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,yGACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,aACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,6FACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,YACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,iFACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,YACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,qEACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,cACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,EACVqJ,WAAY,iFACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,YACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,GACVqJ,WAAY,iGACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,WACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,GACVqJ,WAAY,2HACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,cACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,GACVqJ,WACI,mLACJ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,cACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,GACVqJ,WAAY,sHACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,WACT1I,OAAQ,EACRC,WAAW,GAEf,CACIb,SAAU,GACVqJ,WAAY,kGACZ7I,WAAY,eACZC,SAAU,KACVC,aAAc,MACdC,SAAU,KACV2I,QAAS,UACT1I,OAAQ,EACRC,WAAW,QDnIb0I,E,kDACF,WAAYnK,GAAQ,IAAD,8BACf,cAAMA,IAUVoK,mBAAqB,SAAC7B,GAClB,EAAK8B,SAAS,CACVjD,aAAcmB,EAAM+B,OAAO/B,MAC3BgC,UAAWzJ,KAAKE,WAEpBsB,QAAQC,IAAI,sBAAuB,EAAKiI,MAAMpD,eAhB/B,EAmBnBqD,gBAAkB,SAAClC,GACf,EAAK8B,SAAS,CACVhD,UAAWkB,EAAM+B,OAAO/B,MACxBgC,UAAWzJ,KAAKE,WAEpBsB,QAAQC,IAAI,qBAAsB,EAAKiI,MAAMnD,YAxB9B,EA2BnBqD,eAAiB,SAACnC,GACd,EAAK8B,SAAS,CACVzF,SAAU2D,EAAM+B,OAAO/B,MACvBgC,UAAWzJ,KAAKE,YA9BL,EAkCnB2J,iBAAmB,SAACxD,GAChB7E,QAAQC,IAAI,2BAA4B,EAAKiI,MAAMrD,WAEnD,IAEMyD,EAAU5B,EAAW7B,EAFf3G,EAAWD,QAAQiC,QAI/B,EAAK6H,SAAS,CACVlD,UAAWA,EACXyD,QAASA,EACTL,UAAWzJ,KAAKE,WAGpBsB,QAAQC,IAAI,WAAY4E,EAAWyD,IA/CpB,EAkDnBhJ,iBAAmB,SAAC6G,GAGhB,GAFAnG,QAAQC,IAAI,cAAekG,GAEE,OAAzB,EAAK+B,MAAMrD,UACX,OAAO,EAEX,IASI9F,EADQb,EAAWD,QAAQiC,OACV0G,QAAO,SAAUC,EAAaC,GAC/C,OAA4B,GAAxBA,EAAc5H,OACP2H,EAAcE,SAASD,EAAc/H,UAErC8H,IAEZ,GAEH7G,QAAQC,IACJ,mBACA,EAAKiI,MAAMrD,UACX,EAAKqD,MAAMI,QACX,EAAKJ,MAAMD,WAGf,IAAMhB,EAxBY,SAAUN,EAAIO,GAC5B,OAAO,IAAIM,KAAKb,EAAGK,UAAsB,IAAVE,GAuBnBqB,CAAY,EAAKL,MAAMrD,UAAW9F,GAC9CmI,EAAU,GACdlH,QAAQC,IAAI,YAAagH,EAAQE,cAE7BD,EADAD,EAAQE,aAAe,GACb,IAAIC,OAAOC,OAAOJ,EAAQE,eAE1BE,OAAOJ,EAAQE,cAG7B,IAAMmB,EAAUjB,OAAOJ,EAAQK,YAAYF,OAAO,IAAKF,GAEvD,EAAKa,SAAS,CACVO,QAASA,EACTL,UAAWzJ,KAAKE,WAGpBsB,QAAQC,IACJ,kBACA,EAAKiI,MAAMrD,UACX,EAAKqD,MAAMI,QACX,EAAKJ,MAAMD,YAlGf,EAAKC,MAAQ,CACTD,UAAW,EACXK,QAAS,KACTzD,UAAW,KACXC,aAAc,GACdC,UAAW,GACXzC,SAAU,IARC,E,qDAwGT,IAAD,OACG6B,EAAY9E,KAAK3B,MAAjByG,QACR,OACI,yBAAKI,UAAU,QACX,6BACI,yBACIrC,MAAM,QACNsG,IAAI,oGAGZ,yBAAKjE,UAAU,aACX,kBAACkE,EAAA,EAAD,CACIlE,UAAWJ,EAAQN,KACnBX,GAAG,eACH8C,MAAM,gBACN0C,OAAQ,SAACzC,GAAD,OAAW,EAAK6B,mBAAmB7B,MAE/C,kBAACwC,EAAA,EAAD,CACIvF,GAAG,YACH8C,MAAM,oBACN0C,OAAQ,SAACzC,GAAD,OAAW,EAAKkC,gBAAgBlC,MAE5C,kBAACX,EAAD,CAAYU,MAAM,iBAClB,kBAACK,EAAD,CACInD,GAAG,YACH8C,MAAM,aACNnB,UAAWxF,KAAK6I,MAAMrD,UACtB4B,eAAgB,SAACN,GAAD,OAAU,EAAKkC,iBAAiBlC,MAEpD,kBAACsC,EAAA,EAAD,CACIvF,GAAG,2BACH3D,IAAKF,KAAK6I,MAAMD,UAChBjC,MAAM,WACN2C,aAActJ,KAAK6I,MAAMI,QACzBM,WAAY,CAAEC,UAAU,KAE5B,kBAACJ,EAAA,EAAD,CACIvF,GAAG,WACH8C,MAAM,WACN0C,OAAQ,SAACzC,GAAD,OAAW,EAAKmC,eAAenC,OAG/C,yBAAK6C,MAAO,CAAEC,QAAS,UAAW,YAAa,SAA/C,wDAGA,yBAAKxE,UAAU,UACX,yBAAKA,UAAU,UACX,kBAAC,EAAD,CACIrB,GAAI,EACJhF,WAAYA,EAAWD,QACvBL,OAAQ,EACRqF,eAAgB,kBAGxB,yBAAKsB,UAAU,UACX,kBAAC,EAAD,CACIrB,GAAI,EACJhF,WAAYA,EAAWD,QACvBL,OAAQ,EACRqF,eAAgB,eAChB3D,iBAAkB,SAAC6G,GAAD,OACd,EAAK7G,iBAAiB6G,QAKtC,kBAAC,EAAD,CACI1D,KAAK,SACLoC,UAAWxF,KAAK6I,MAAMrD,UACtBC,aAAczF,KAAK6I,MAAMpD,aACzBC,UAAW1F,KAAK6I,MAAMnD,UACtBzC,SAAUjD,KAAK6I,MAAM5F,gB,GAhLvBkB,IAAMC,WAuLTuF,eAvMA,SAACpF,GAAD,MAAY,CACvBC,KAAM,CACFC,OAAQ,KACR5B,MAAO,MACP+G,SAAU,MAmMgB,CAAEC,WAAW,GAAhCF,CAAwCnB,GE1LxCA,MAvBf,WAAgB,IAAD,EACqBtC,mBAAS,GAD9B,mBACJ4D,EADI,KACMC,EADN,KAKX,OACI,kBAAC,IAAD,CAAQC,SAAuB,WAC3B,kBAAC,IAAD,CACIF,SAAUA,EACV3H,OAAQ,GACRiD,MAAM,MACN6E,iBAAkB,kBATCF,EAAY,MAWnC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,UCZQC,QACW,cAA7BC,OAAOpH,SAASqH,UAEe,UAA7BD,OAAOpH,SAASqH,UAEhBD,OAAOpH,SAASqH,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxK,MAAK,SAAAyK,GACJA,EAAaC,gBAEdjJ,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMiJ,c","file":"static/js/main.bcacff09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.03ea0c8b.svg\";","import React from \"react\";\r\nimport DataGrid, {\r\n    Column,\r\n    RowDragging,\r\n    Scrolling,\r\n    Popup,\r\n    Sorting,\r\n    Position,\r\n    Button,\r\n    Editing,\r\n    Form,\r\n    FormItem,\r\n    Label,\r\n} from \"devextreme-react/data-grid\";\r\nimport { CheckBox } from \"devextreme-react/check-box\";\r\nimport { Col } from \"devextreme-react/responsive-box\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport { Item } from \"devextreme-react/form\";\r\nimport removeLogo from \"./cross.svg\";\r\nimport \"./style.css\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n// import { Button } from 'devextreme-react/button';\r\nimport alertDialog from \"../AlertDialog/alertDialog\";\r\n\r\nfunction _uuid() {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n    return (\r\n        s4() +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        \"-\" +\r\n        s4() +\r\n        s4() +\r\n        s4()\r\n    );\r\n}\r\n\r\nclass Grid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterExpr = [\"Status\", \"=\", this.props.status];\r\n        this.onAdd = this.onAdd.bind(this);\r\n        this.onReorder = this.onReorder.bind(this);\r\n\r\n        this.dataSource = {\r\n            store: this.props.datasource,\r\n            reshapeOnPush: true,\r\n        };\r\n    }\r\n\r\n    onInitNewRow(e) {\r\n        // e.promise = this.getDefaultData().then(data => {\r\n        //     e.data.ID = data.ID;\r\n        //     e.data.position = data.Position;\r\n        // });\r\n        e.data.courseId = _uuid();\r\n        e.data.courseType = \"自訂\";\r\n        e.data.duration = \"20\";\r\n        e.data.durationType = \"min\";\r\n        e.data.capacity = \"20\";\r\n        e.data.Status = \"2\";\r\n        e.data.Customize = true;\r\n        e.data.notes = \"如果要新增課程，需要自行邀請講師\";\r\n        this.props.calculateEndTime(0);\r\n    }\r\n\r\n    onAdd(e) {\r\n        var key = e.itemData.courseId,\r\n            values = { Status: e.toData };\r\n\r\n        this.props.datasource.update(key, values).then(() => {\r\n            this.props.datasource.push([\r\n                {\r\n                    type: \"update\",\r\n                    key: key,\r\n                    data: values,\r\n                },\r\n            ]);\r\n        });\r\n\r\n        if (this.checkStatus(e.toData)) {\r\n            console.log(\"calculateEndTime\");\r\n            this.props.calculateEndTime(0);\r\n        }\r\n    }\r\n\r\n    onReorder(e) {\r\n        let store = this.props.datasource._array;\r\n        let visibleRows = e.component.getVisibleRows(),\r\n            toIndex = store.indexOf(visibleRows[e.toIndex].data),\r\n            fromIndex = store.indexOf(e.itemData);\r\n\r\n        store.splice(fromIndex, 1);\r\n        store.splice(toIndex, 0, e.itemData);\r\n\r\n        e.component.refresh();\r\n    }\r\n\r\n    onDeleteClick(e) {\r\n        notify(`已成功刪除課程`);\r\n        var customize = e.row.data.Customize,\r\n            key = e.row.data.courseId;\r\n\r\n        if (customize === true) {\r\n            this.props.datasource.remove(key).done(() => {\r\n                this.refreshDataGrid();\r\n            });\r\n        } else {\r\n            var values = { Status: 1 };\r\n\r\n            this.props.datasource.update(key, values).then(() => {\r\n                this.props.datasource.push([\r\n                    {\r\n                        type: \"update\",\r\n                        key: key,\r\n                        data: values,\r\n                    },\r\n                ]);\r\n            });\r\n        }\r\n        this.props.calculateEndTime(0);\r\n    }\r\n\r\n    getRowIndex(cellData) {\r\n        // console.log(cellData);\r\n        var key = cellData.rowIndex;\r\n        // console.log(key);\r\n        return key + 1;\r\n    }\r\n\r\n    checkStatus(status) {\r\n        /** 如果是右邊(選擇課程的欄位)，則回傳true\r\n         *  @param {}\r\n         */\r\n        if (status === 2) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    refreshDataGrid() {\r\n        this.dataGrid.instance\r\n            .refresh()\r\n            .then(function () {\r\n                // ...\r\n            })\r\n            .catch(function (error) {\r\n                // ...\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataGrid\r\n                ref={(ref) => (this.dataGrid = ref)}\r\n                dataSource={this.dataSource}\r\n                height={this.props.status === 1 ? 520 : 566}\r\n                showBorders={true}\r\n                filterValue={this.filterExpr}\r\n                noDataText=\"\"\r\n                onInitNewRow={(e) => this.onInitNewRow(e)}\r\n                onRowInserted={() => this.props.calculateEndTime()}\r\n            >\r\n                <Editing\r\n                    // allowUpdating={true}\r\n                    allowAdding={this.checkStatus(this.props.status)} //改變toolbar https://js.devexpress.com/Demos/WidgetsGallery/Demo/DataGrid/ToolbarCustomization/React/Light/\r\n                    // allowDeleting={true}\r\n                    mode=\"popup\"\r\n                >\r\n                    <Popup\r\n                        title=\"新增自訂主題\"\r\n                        showTitle={true}\r\n                        width={700}\r\n                        height={525}\r\n                    >\r\n                        {/* <Position my=\"top\" at=\"top\" of={window} /> */}\r\n                    </Popup>\r\n                    <Form colCount={1}>\r\n                        <Item dataField=\"courseName\" caption=\"主題\" />\r\n                        <Item dataField=\"duration\" caption=\"時間(分\" />\r\n                        <Item\r\n                            dataField=\"speaker\"\r\n                            caption=\"講師 (需要自行邀請講師)\"\r\n                        />\r\n                        {/* <Item dataField=\"備註\" editorType=\"dxTextArea\" /> */}\r\n                        <div>bobooboo</div>\r\n                        <Item\r\n                        // dataField=\"如果要新增課程，需要自行邀請講師\"\r\n                        // caption=\"如果要新增課程，需要自行邀請講師\"\r\n                        >\r\n                            <Label\r\n                                location=\"top\"\r\n                                alignment=\"center\"\r\n                                showColon={false}\r\n                                text=\"如果要新增課程，需要自行邀請講師\"\r\n                            />\r\n                        </Item>\r\n                    </Form>\r\n                </Editing>\r\n\r\n                <RowDragging\r\n                    allowReordering={true}\r\n                    data={this.props.status}\r\n                    group=\"tasksGroup\"\r\n                    onReorder={this.onReorder}\r\n                    onAdd={this.onAdd}\r\n                />\r\n                <Scrolling mode=\"virtual\" />\r\n                <Sorting mode=\"none\" />\r\n\r\n                <Column\r\n                    dataField=\"courseId\"\r\n                    dataType=\"string\"\r\n                    caption=\"編號\"\r\n                    alignment=\"center\"\r\n                    width={45}\r\n                    hidingPriority={1}\r\n                    visible={this.checkStatus(!this.props.status)}\r\n                />\r\n                <Column\r\n                    dataType=\"string\"\r\n                    caption=\"順序\"\r\n                    alignment=\"center\"\r\n                    width={45}\r\n                    visible={this.checkStatus(this.props.status)}\r\n                    // hidingPriority={1}\r\n                    cellRender={this.getRowIndex}\r\n                />\r\n                <Column\r\n                    dataField=\"courseName\"\r\n                    dataType=\"string\"\r\n                    caption={this.props.displayCaption}\r\n                />\r\n                <Column\r\n                    dataField=\"speaker\"\r\n                    dataType=\"string\"\r\n                    caption={\"講師\"}\r\n                    alignment=\"center\"\r\n                    width={120}\r\n                    hidingPriority={2}\r\n                />\r\n                <Column\r\n                    dataField=\"duration\"\r\n                    dataType=\"number\"\r\n                    width={70}\r\n                    visible={true}\r\n                    caption=\"時間(分)\"\r\n                    alignment=\"center\"\r\n                    hidingPriority={3}\r\n                ></Column>\r\n                <Column dataField=\"Status\" dataType=\"number\" visible={false} />\r\n                <Column\r\n                    type=\"buttons\"\r\n                    caption=\"刪除\"\r\n                    alignment=\"center\"\r\n                    width={50}\r\n                    visible={this.checkStatus(this.props.status)}\r\n                >\r\n                    <Button\r\n                        id=\"removeButton\"\r\n                        width={120}\r\n                        icon={removeLogo}\r\n                        cssClass=\"dx-icon-custom-style\"\r\n                        onClick={(e) => this.onDeleteClick(e)}\r\n                    />\r\n                </Column>\r\n            </DataGrid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1.5),\r\n        // border: \"5px\",\r\n        float: \"right\",\r\n        \"& > *\": {},\r\n    },\r\n}));\r\n\r\nfunction Snackbar(props) {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const tobackend = () => {\r\n        fetch(\"http://127.0.0.1:5000/\")\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n            })\r\n            .catch(console.log);\r\n    };\r\n    const handleClickVariant = (variant) => () => {\r\n        // variant could be success, error, warning, info, or default\r\n\r\n        tobackend();\r\n\r\n        var checkNull = () => {\r\n            if (\r\n                props.startTime == null ||\r\n                props.engagementId === \"\" ||\r\n                props.requester === \"\" ||\r\n                props.location === \"\"\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        var check = checkNull();\r\n        if (check) {\r\n            console.log(\"checkNUll error\");\r\n            console.log(\r\n                props.startTime,\r\n                props.engagementId,\r\n                props.requester,\r\n                props.location\r\n            );\r\n            enqueueSnackbar(\"請輸入所有資料\", { variant: \"error\" });\r\n        } else {\r\n            console.log(\"checknull success\");\r\n            console.log(\r\n                props.startTime,\r\n                props.engagementId,\r\n                props.requester,\r\n                props.location\r\n            );\r\n            enqueueSnackbar(\r\n                \"已將您的初版Agenda送給MTC briefing coordinator, 後續會在與您確認最終版Agenda\",\r\n                { variant }\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            className={classes.root}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClickVariant(\"success\")}\r\n        >\r\n            {props.text}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default function IntegrationNotistack(props) {\r\n    return (\r\n        <SnackbarProvider maxSnack={1}>\r\n            <Snackbar\r\n                text={props.text}\r\n                startTime={props.startTime}\r\n                engagementId={props.engagementId}\r\n                requester={props.requester}\r\n                location={props.location}\r\n            />\r\n        </SnackbarProvider>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    textField: {\r\n        margin: \"1%\",\r\n        width: \"13%\",\r\n        \"font-size\": \"3px\",\r\n    },\r\n}));\r\n\r\nfunction PickerDate(props) {\r\n    const classes = useStyles();\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n                required\r\n                // disableToolbar\r\n                clearable\r\n                showTodayButton\r\n                className={classes.textField}\r\n                // variant=\"inline\"\r\n                format=\"yyyy/MM/dd\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label={props.label}\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n\r\nfunction PickerTime(props) {\r\n    const classes = useStyles();\r\n    const [selectedTime, setSelectedTime] = useState(props.startTime);\r\n\r\n    const handleTimeChange = (date) => {\r\n        setSelectedTime(date);\r\n        console.log(\"datePicker: \", date);\r\n        props.onSelectedTime(date === null ? 0 : date);\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardTimePicker\r\n                // disableToolbar\r\n                required\r\n                // clearable\r\n                showTodayButton\r\n                ampm={false}\r\n                className={classes.textField}\r\n                id=\"time-picker\"\r\n                label={props.label}\r\n                value={selectedTime}\r\n                // format=\"hh:mm\"\r\n                onChange={handleTimeChange}\r\n                KeyboardButtonProps={{\r\n                    \"aria-label\": \"change time\",\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n\r\nexport { PickerDate, PickerTime };\r\n","import React from \"react\";\r\n\r\nexport function convertMinute(newTime) {\r\n    /**\r\n     * @param {Date} newTime new time after calculate add minutes\r\n     */\r\n    let minutes = \"\";\r\n\r\n    if (newTime.getMinutes() < 10) {\r\n        minutes = \"0\".concat(String(newTime.getMinutes()));\r\n    } else {\r\n        minutes = String(newTime.getMinutes());\r\n    }\r\n\r\n    const endTime = String(newTime.getHours()).concat(\":\", minutes);\r\n\r\n    return endTime;\r\n}\r\n\r\nexport function addMinutes(dt, store) {\r\n    /** 把選擇課程的時間加到原本的時間\r\n     * @param {Date} dt start date\r\n     * @param {Array} store seletec course array\r\n     */\r\n\r\n    console.log(\"addMinutes() : \", dt, typeof dt);\r\n    if (dt === 0) {\r\n        console.log(\"dt == null\");\r\n        return dt;\r\n    }\r\n\r\n    let duration = store.reduce(function (accumulator, curruentValue) {\r\n        if (curruentValue.Status === 2) {\r\n            return accumulator + parseInt(curruentValue.duration);\r\n        } else {\r\n            return accumulator;\r\n        }\r\n    }, 0);\r\n\r\n    console.log(\"new date: \", dt.getTime());\r\n\r\n    let newTime = new Date(dt.getTime() + duration * 60000);\r\n    let endTime = convertMinute(newTime);\r\n\r\n    return endTime;\r\n}\r\n","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { styled, withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"./grid.jsx\";\r\nimport DataSource from \"devextreme/data/data_source\";\r\nimport ArrayStore from \"devextreme/data/array_store\";\r\nimport Snackbar from \"../Snackbar/snackbar\";\r\nimport { PickerDate, PickerTime } from \"../DatePicker/datePicker\";\r\n\r\nimport DateFnsAdapter from \"@date-io/date-fns\";\r\n\r\nimport { courseList } from \"./data\";\r\nimport \"./style.css\";\r\n\r\nimport { addMinutes } from \"./utils\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: \"1%\",\r\n        width: \"14%\",\r\n        fontSize: 3,\r\n    },\r\n});\r\n\r\nconst datasource = new DataSource({\r\n    store: new ArrayStore({\r\n        key: \"courseId\",\r\n        Status: \"Status\",\r\n        data: courseList,\r\n    }),\r\n});\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            renderkey: 0,\r\n            endTime: null,\r\n            startTime: null,\r\n            engagementId: \"\",\r\n            requester: \"\",\r\n            location: \"\",\r\n        };\r\n    }\r\n    handleEngagementId = (value) => {\r\n        this.setState({\r\n            engagementId: value.target.value,\r\n            renderkey: Math.random(),\r\n        });\r\n        console.log(\"handel Engagement: \", this.state.engagementId);\r\n    };\r\n\r\n    handleRequester = (value) => {\r\n        this.setState({\r\n            requester: value.target.value,\r\n            renderkey: Math.random(),\r\n        });\r\n        console.log(\"handel Requester: \", this.state.requester);\r\n    };\r\n\r\n    handleLocation = (value) => {\r\n        this.setState({\r\n            location: value.target.value,\r\n            renderkey: Math.random(),\r\n        });\r\n    };\r\n\r\n    handleTimeChange = (startTime) => {\r\n        console.log(\"start handleTimechange: \", this.state.startTime);\r\n\r\n        let store = datasource.store()._array;\r\n\r\n        const endTime = addMinutes(startTime, store);\r\n\r\n        this.setState({\r\n            startTime: startTime,\r\n            endTime: endTime,\r\n            renderkey: Math.random(),\r\n        });\r\n\r\n        console.log(\"handle: \", startTime, endTime);\r\n    };\r\n\r\n    calculateEndTime = (date) => {\r\n        console.log(\"calculate: \", date);\r\n\r\n        if (this.state.startTime === null) {\r\n            return 0;\r\n        }\r\n        var add_minutes = function (dt, minutes) {\r\n            return new Date(dt.getTime() + minutes * 60000);\r\n        };\r\n\r\n        // if (date === 0 && this.state.startTime === null) {\r\n        //     return 0;\r\n        // }\r\n\r\n        let store = datasource.store()._array;\r\n        let duration = store.reduce(function (accumulator, curruentValue) {\r\n            if (curruentValue.Status == 2) {\r\n                return accumulator + parseInt(curruentValue.duration);\r\n            } else {\r\n                return accumulator;\r\n            }\r\n        }, 0);\r\n\r\n        console.log(\r\n            \"state (before): \",\r\n            this.state.startTime,\r\n            this.state.endTime,\r\n            this.state.renderkey\r\n        );\r\n\r\n        const newTime = add_minutes(this.state.startTime, duration);\r\n        var minutes = \"\";\r\n        console.log(\"minutes: \", newTime.getMinutes());\r\n        if (newTime.getMinutes() < 10) {\r\n            minutes = \"0\".concat(String(newTime.getMinutes()));\r\n        } else {\r\n            minutes = String(newTime.getMinutes());\r\n        }\r\n\r\n        const endTime = String(newTime.getHours()).concat(\":\", minutes);\r\n\r\n        this.setState({\r\n            endTime: endTime,\r\n            renderkey: Math.random(),\r\n        });\r\n\r\n        console.log(\r\n            \"state (after): \",\r\n            this.state.startTime,\r\n            this.state.endTime,\r\n            this.state.renderkey\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"root\">\r\n                <div>\r\n                    <img\r\n                        width=\"200px\"\r\n                        src=\"https://images.all-free-download.com/images/graphiclarge/microsoft_technology_center_68445.jpg\"\r\n                    ></img>\r\n                </div>\r\n                <div className=\"textfield\">\r\n                    <TextField\r\n                        className={classes.root}\r\n                        id=\"engagementId\"\r\n                        label=\"ENGAGEMENT ID\"\r\n                        onText={(value) => this.handleEngagementId(value)}\r\n                    />\r\n                    <TextField\r\n                        id=\"requester\"\r\n                        label=\"REQUESTER (ALIAS)\"\r\n                        onText={(value) => this.handleRequester(value)}\r\n                    />\r\n                    <PickerDate label=\"REQUEST DATE\" />\r\n                    <PickerTime\r\n                        id=\"startTime\"\r\n                        label=\"START TIME\"\r\n                        startTime={this.state.startTime}\r\n                        onSelectedTime={(date) => this.handleTimeChange(date)}\r\n                    />\r\n                    <TextField\r\n                        id=\"standard-read-only-input\"\r\n                        key={this.state.renderkey}\r\n                        label=\"END TIME\"\r\n                        defaultValue={this.state.endTime}\r\n                        InputProps={{ readOnly: true }}\r\n                    />\r\n                    <TextField\r\n                        id=\"location\"\r\n                        label=\"LOCATION\"\r\n                        onText={(value) => this.handleLocation(value)}\r\n                    />\r\n                </div>\r\n                <div style={{ padding: \"2% 1% 0\", \"font-size\": \"20px\" }}>\r\n                    MTC briefing coordinator : Vivian Lee / Karin Chuang\r\n                </div>\r\n                <div className=\"tables\">\r\n                    <div className=\"column\">\r\n                        <Grid\r\n                            id={1}\r\n                            datasource={datasource.store()}\r\n                            status={1}\r\n                            displayCaption={\"主題\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <Grid\r\n                            id={2}\r\n                            datasource={datasource.store()}\r\n                            status={2}\r\n                            displayCaption={\"主題\"}\r\n                            calculateEndTime={(date) =>\r\n                                this.calculateEndTime(date)\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Snackbar\r\n                    text=\"submit\"\r\n                    startTime={this.state.startTime}\r\n                    engagementId={this.state.engagementId}\r\n                    requester={this.state.requester}\r\n                    location={this.state.location}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App);\r\n","export const courseList = [\r\n    {\r\n        courseId: 0,\r\n        courseName: \"MTC導覽\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"30\",\r\n        speaker: \"MTC Team\",\r\n        Status: 2,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 1,\r\n        courseName: \"微軟的轉型之旅：從桌面到雲端的革命\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"30\",\r\n        speaker: \"Peter Hu\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 2,\r\n        courseName: \"從 Edge 到全球數據中心佈署：微軟的雲端戰略\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Peter Hu\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 3,\r\n        courseName: \"微軟的 5G+IoT 技術戰略與智慧製造\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Peter Hu\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 4,\r\n        courseName: \"企業財務數位化轉型的旅程與實戰心法\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Hannah Wang\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 5,\r\n        courseName: \"企業人資數位化轉型的旅程與實戰心法\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Linda Wang\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 6,\r\n        courseName: \"金融業數位轉型的旅程與實戰心法\",\r\n        courseType: \"高端\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Jimmy Liu\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 7,\r\n        courseName: \"雲端時代的資訊安全架構指南\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"White Pai\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 8,\r\n        courseName: \"微軟的人工智慧發展藍圖\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Ethan Huang\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 9,\r\n        courseName: \"雲端時代的資訊安全最佳做法\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Jason Lin\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 10,\r\n        courseName: \"在雲端運行 SAP：來自微軟的最佳實踐\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"James Wu\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 11,\r\n        courseName: \"開發流程現代化與雲原生應用程式的最佳實踐\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Huier Huang\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 12,\r\n        courseName:\r\n            \"從彙整資料資產到改善營運的洞見: 微軟雲端資料服務的策略與藍圖\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Ethan Huang\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 13,\r\n        courseName: \"微軟 Azure 雲平台基礎建設發展藍圖及技術概覽\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Ken Hung\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n    {\r\n        courseId: 14,\r\n        courseName: \"微軟 IoT 平台發展藍圖與最佳做法指南\",\r\n        courseType: \"技術\",\r\n        duration: \"30\",\r\n        durationType: \"min\",\r\n        capacity: \"10\",\r\n        speaker: \"Joe Lin\",\r\n        Status: 1,\r\n        Customize: false,\r\n    },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport DndRow from \"./components/Dnd-Row/row\";\r\n\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\n\r\nfunction App() {\r\n    const [progress, setProgress] = useState(0);\r\n    const onLoaderFinished = () => setProgress(0);\r\n    const production = true;\r\n\r\n    return (\r\n        <Router basename={production ? \"/mtccrm\" : \"\"}>\r\n            <LoadingBar\r\n                progress={progress}\r\n                height={10}\r\n                color=\"red\"\r\n                onLoaderFinished={() => onLoaderFinished(0)}\r\n            />\r\n            <Route exact path=\"/\">\r\n                <DndRow />\r\n            </Route>\r\n            <Route exact path=\"/home\">\r\n                HOME\r\n            </Route>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}